events {
    worker_connections 1024;
}

http {
    
    log_format  main  'Custom: $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';
    lua_need_request_body on;
    error_log stderr info;

    server {
        listen 80;

        set $resp_body "";

        # Log request body
        access_by_lua_block {
            ngx.req.read_body()
            local data = ngx.req.get_body_data()
            ngx.log(ngx.INFO, "=== REQUEST BODY ===\n", data or "[empty]")
        }

        # Cache response body
        body_filter_by_lua_block {
            -- Only log 'text' content types (avoid logging images etc)
            local content_type = ngx.header.content_type or ""
            if not string.find(content_type, "text") and not string.find(content_type, "json") then
                return
            end

            -- accumulate chunks in a variable
            if ngx.arg[1] then
                ngx.ctx.buffered = (ngx.ctx.buffered or "") .. ngx.arg[1]
            end

            -- ngx.arg[2] == true means end of response
            if ngx.arg[2] then
                ngx.log(ngx.INFO, "=== RESPONSE BODY ===\n", ngx.ctx.buffered or "[empty]")
            end
        }

        location / {
            proxy_pass http://web:3000/;
            proxy_set_header Host $host;
        }
        
        location /internal/ {
            # the following two lines are needed to avoid CORS checks from the backend
            proxy_set_header Origin "";
            proxy_set_header Referer "";
            # the following two lines are needed to avoid CORS checks from the browser
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            if ($request_method = 'OPTIONS') {
                return 204;
            }

            rewrite ^/internal/(.*)$ /$1 break;
            proxy_pass http://issuer-agent-management:8080/;
        }
        location /oid4vci/ {
            proxy_pass http://issuer-agent-oid4vci:8080/;
            rewrite ^/oid4vci/(.*)$ /$1 break;
        }
        
        location /verifier/internal/ {
            # the following two lines are needed to avoid CORS checks from the backend
            proxy_set_header Origin "";
            proxy_set_header Referer "";
            # the following two lines are needed to avoid CORS checks from the browser
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            if ($request_method = 'OPTIONS') {
                return 204;
            }

            rewrite ^/verifier/internal/(.*)$ /$1 break;
            proxy_pass http://verifier-agent-management:8080/;
        }
        location /oid4vp/ {
            proxy_pass http://verifier-agent-oid4vp:8080/;
            rewrite ^/oid4vp/(.*)$ /$1 break;
        }
    }
}
